{"ast":null,"code":"import _classCallCheck from \"/Users/new/projects/vnasian19/vnasian/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/new/projects/vnasian19/vnasian/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/new/projects/vnasian19/vnasian/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/new/projects/vnasian19/vnasian/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/new/projects/vnasian19/vnasian/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/new/projects/vnasian19/vnasian/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/new/projects/vnasian19/vnasian/src/App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactJWPlayer from 'react-jw-player';\nvar displayName = 'App';\nvar propTypes = {\n  playlist: PropTypes.string.isRequired,\n  playerScript: PropTypes.string.isRequired\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      videoTitle: 'new video'\n    };\n    _this.onAdPlay = _this.onAdPlay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onReady = _this.onReady.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onVideoLoad = _this.onVideoLoad.bind(_assertThisInitialized(_assertThisInitialized(_this))); // each instance of <ReactJWPlayer> needs a unique id.\n    // we randomly generate it here and assign to the container instance.\n\n    _this.playerId = \"123456\";\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onReady\",\n    value: function onReady(event) {\n      // interact with JW Player API here\n      var player = window.jwplayer(this.playerId);\n    }\n  }, {\n    key: \"onAdPlay\",\n    value: function onAdPlay(event) {// track the ad play here\n    }\n  }, {\n    key: \"onVideoLoad\",\n    value: function onVideoLoad(event) {\n      this.setState({\n        videoTitle: event.item.description // this only works with json feeds!\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"react-jw-player-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.videoTitle), React.createElement(ReactJWPlayer, {\n        playlist: this.props.playlist,\n        licenseKey: \"your-license-key\",\n        onAdPlay: this.onAdPlay,\n        onReady: this.onReady,\n        onVideoLoad: this.onVideoLoad,\n        playerId: this.playerId // bring in the randomly generated playerId\n        ,\n        playerScript: \"https://link-to-your-jw-player-script.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nApp.propTypes = propTypes; // App.defaultProps = defaultProps;\n\nApp.displayName = displayName;\nexport default App;","map":{"version":3,"sources":["/Users/new/projects/vnasian19/vnasian/src/App.js"],"names":["React","Component","PropTypes","ReactJWPlayer","displayName","propTypes","playlist","string","isRequired","playerScript","App","props","state","videoTitle","onAdPlay","bind","onReady","onVideoLoad","playerId","event","player","window","jwplayer","setState","item","description"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAMC,WAAW,GAAG,KAApB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADX;AAEhBC,EAAAA,YAAY,EAAEP,SAAS,CAACK,MAAV,CAAiBC;AAFf,CAAlB;;IAKME,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,uDAAnB,CARiB,CAUjB;AACA;;AACA,UAAKG,QAAL,GAAgB,QAAhB;AAZiB;AAalB;;;;4BACOC,K,EAAO;AACb;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgB,KAAKJ,QAArB,CAAf;AACD;;;6BACQC,K,EAAO,CACd;AACD;;;gCACWA,K,EAAO;AACjB,WAAKI,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAEM,KAAK,CAACK,IAAN,CAAWC,WADX,CACuB;;AADvB,OAAd;AAGD;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKb,KAAL,CAAWC,UAAjB,CADF,EAEE,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWL,QADvB;AAEE,QAAA,UAAU,EAAC,kBAFb;AAGE,QAAA,QAAQ,EAAE,KAAKQ,QAHjB;AAIE,QAAA,OAAO,EAAE,KAAKE,OAJhB;AAKE,QAAA,WAAW,EAAE,KAAKC,WALpB;AAME,QAAA,QAAQ,EAAE,KAAKC,QANjB,CAM2B;AAN3B;AAOE,QAAA,YAAY,EAAC,0CAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAcD;;;;EA1CejB,S;;AA6ClBS,GAAG,CAACL,SAAJ,GAAgBA,SAAhB,C,CACA;;AACAK,GAAG,CAACN,WAAJ,GAAkBA,WAAlB;AAEA,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactJWPlayer from 'react-jw-player';\n\nconst displayName = 'App';\n\nconst propTypes = {\n  playlist: PropTypes.string.isRequired,\n  playerScript: PropTypes.string.isRequired\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoTitle: 'new video',\n    };\n\n    this.onAdPlay = this.onAdPlay.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onVideoLoad = this.onVideoLoad.bind(this);\n\n    // each instance of <ReactJWPlayer> needs a unique id.\n    // we randomly generate it here and assign to the container instance.\n    this.playerId = \"123456\";\n  }\n  onReady(event) {\n    // interact with JW Player API here\n    const player = window.jwplayer(this.playerId);\n  }\n  onAdPlay(event) {\n    // track the ad play here\n  }\n  onVideoLoad(event) {\n    this.setState({\n      videoTitle: event.item.description // this only works with json feeds!\n    });\n  }\n  render() {\n    return (\n      <div className='react-jw-player-container'>\n        <h1>{ this.state.videoTitle }</h1>\n        <ReactJWPlayer\n          playlist={this.props.playlist}\n          licenseKey='your-license-key'\n          onAdPlay={this.onAdPlay}\n          onReady={this.onReady}\n          onVideoLoad={this.onVideoLoad}\n          playerId={this.playerId} // bring in the randomly generated playerId\n          playerScript='https://link-to-your-jw-player-script.js'\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = propTypes;\n// App.defaultProps = defaultProps;\nApp.displayName = displayName;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}